steps:
  # Step 0: Check if uploaded file is model.keras
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get Pub/Sub attributes
        echo "Checking uploaded file..."
        
        # Exit if not model.keras
        if [[ "$(echo $_OBJECT_ID)" != "model.keras" ]]; then
          echo "Skipping: not model.keras"
          exit 0
        fi
        
        echo "Processing model.keras"

  # Step 1: Copy model from Account A GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - 'cp'
      - 'gs://models2_de2025_group6/model.keras'
      - 'Part 1/prediction-api/models/model.keras'
  
  # Step 2: Build prediction-api
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api:latest'
      - '.'
    dir: 'Part 1/prediction-api'
  
  # Step 3: Push prediction-api
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api'
  
  # Step 4: Deploy prediction-api
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'prediction-api'
      - '--image=us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=5000'
  
    # Step 5: Build prediction-ui Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui:$SHORT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui:latest'
      - '.'
    dir: 'Part 1/prediction-ui'
  
  # Step 6: Push prediction-ui image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui'
    dir: 'Part 1/prediction-ui'
  
    # Step 7: Get prediction-api URL (pin project + platform)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run services describe prediction-api \
          --project=de2025-475823 \
          --region=us-central1 \
          --platform=managed \
          --format='value(status.url)' > /workspace/api_url.txt
        echo "Prediction API URL: $(cat /workspace/api_url.txt)"

  # Step 8: Deploy prediction-ui with correct env
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        API_URL=$(cat /workspace/api_url.txt)
        gcloud run deploy prediction-ui \
          --project=de2025-475823 \
          --image=us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui:latest \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --port=5000 \
          --set-env-vars=PREDICTOR_API=$${API_URL}/heart_predictor/

images:
  - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api:$SHORT_SHA'
  - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-api:latest'
  - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui:$SHORT_SHA'
  - 'us-central1-docker.pkg.dev/de2025-475823/heart-disease-repo/prediction-ui:latest'

options:
  logging: CLOUD_LOGGING_ONLY